{"version":3,"sources":["components/ChooseGender.js","img/avatars/424431.svg","img/avatars/949666.svg","img/avatars/anonymous.svg","img/avatars/921082.svg","img/avatars/921110.svg","img/avatars/145859.svg","components/Contact.js","components/CreateContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["ChooseGender","checkMale","funcG","checkFemale","checkOther","className","row","FormControlLabel","control","Checkbox","checked","onChange","e","name","color","icon","checkedIcon","label","event","setGender","gender","Contact","firstName","lastName","photo","phone","src","href","contactsList","BarneyPhoto","RobinPhoto","AnonPhoto","LidaPhoto","MarchenPhoto","TeodorPhoto","CreatePostPage","state","contacts","search","findGender","arrayChoose","arrayAllGenders","resultArray","push","filter","contact","flat","Infinity","map","item","setState","filterGenders","target","enterValue","value","toLowerCase","newArray","neededKeys","this","forEach","el","index","indexOf","includes","length","placeholder","filterSearch","createList","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.513f1028.chunk.js","sourcesContent":["import Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup/FormGroup\";\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport React from 'react';\n\nfunction ChooseGender({ checkMale, funcG, checkFemale, checkOther }) {\n    return (\n        <div className=\"checkbox-section\">\n            <FormGroup row>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkMale}\n                            onChange={(e) => funcG(e)}\n                            name=\"checkMale\"\n                            color=\"primary\"\n                            icon={<FavoriteBorder />} \n                            checkedIcon={<Favorite />}\n                        />\n                    }\n                    label=\"Ч\"\n                />\n\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkFemale}\n                            onChange={(event) => funcG(event)}\n                            name=\"checkFemale\"\n                            icon={<FavoriteBorder />} \n                            checkedIcon={<Favorite />}\n                        />\n                    }\n                    label=\"Ж\"\n                />\n\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkOther}\n                            onChange={(event) => funcG(event)}\n                            name=\"checkOther\"\n                            color = \"default\"\n                            icon={<FavoriteBorder />} \n                            checkedIcon={<Favorite />}\n                        />\n                    }\n                    label=\"Не визначено\"\n                />\n            </FormGroup>\n        </div>\n    )\n}\n\nexport default ChooseGender;","export default __webpack_public_path__ + \"static/media/424431.606ed15c.svg\";","export default __webpack_public_path__ + \"static/media/949666.a4054b8a.svg\";","export default __webpack_public_path__ + \"static/media/anonymous.1141569b.svg\";","export default __webpack_public_path__ + \"static/media/921082.52aacba2.svg\";","export default __webpack_public_path__ + \"static/media/921110.05f7bbd6.svg\";","export default __webpack_public_path__ + \"static/media/145859.fa328fc9.svg\";","import React from 'react';\nimport \"../css/contact.css\";\n\nfunction setGender (gender) {\n    switch (gender) {\n        case \"male\": return \"maleSign\";\n        case \"female\": return \"femaleSign\";\n        default: return \"otherSign\";\n    }\n}\n\nfunction Contact({firstName, lastName, gender, photo, phone}) {\n    return (\n        <details>\n            <summary className = \"contact-title\">{lastName} {firstName}</summary>\n            <div className = \"contact\">\n                <div >\n                    <p className = {setGender(gender)}>\n                        <img src = {photo} />\n                    </p>\n                </div>\n                <div className = \"contact-info\">\n                    <p className = \"contact-info-header\">ім'я: <span>{firstName}</span></p>\n                    <p className = \"contact-info-header\">прізвище: <span>{lastName}</span></p>  \n                    <a  className = \"contact-info-header\" href={phone}>моб.тел.: <span>{phone}</span></a>\n                </div>\n            </div>\n        </details>\n    )\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport ChooseGender from \"./ChooseGender\";\nimport \"../css/general.css\";\nimport BarneyPhoto from \"../img/avatars/424431.svg\";\nimport RobinPhoto from \"../img/avatars/949666.svg\";\nimport AnonPhoto from \"../img/avatars/anonymous.svg\";\nimport LidaPhoto from \"../img/avatars/921082.svg\";\nimport MarchenPhoto from \"../img/avatars/921110.svg\";\nimport TeodorPhoto from \"../img/avatars/145859.svg\";\nimport Contact from \"./Contact\";\n\n\nconst contactsList = [{\n    firstName: \"Барней\",\n    lastName: \"Стинсовський\",\n    phone: \"+380956319521\",\n    gender: \"male\",\n    photo: BarneyPhoto\n}, {\n    firstName: \"Робін\",\n    lastName: \"Щербатська\",\n    phone: \"+380931460123\",\n    gender: \"female\",\n    photo: RobinPhoto\n}, {\n    firstName: \"Анонімний\",\n    lastName: \"Анонімус\",\n    phone: \"+380666666666\",\n    photo: AnonPhoto\n}, {\n    firstName: \"Лілія\",\n    lastName: \"Олдровна\",\n    phone: \"+380504691254\",\n    gender: \"female\",\n    photo: LidaPhoto\n}, {\n    firstName: \"Маршен\",\n    lastName: \"Еріксонян\",\n    phone: \"+380739432123\",\n    gender: \"male\",\n    photo: MarchenPhoto\n}, {\n    firstName: \"Теодор\",\n    lastName: \"Мотсбес\",\n    phone: \"+380956319521\",\n    gender: \"male\",\n    photo: TeodorPhoto\n}];\n\nclass CreatePostPage extends Component {\n    state = {\n        contacts: contactsList,\n        checkMale: true,\n        checkFemale: true,\n        checkOther: true,\n        search: true\n    };\n\n    findGender = () => {\n        let arrayChoose = [], arrayAllGenders = [];\n        let resultArray= [];\n        if (this.state.checkFemale) {\n            arrayChoose.push(this.state.contacts.filter(contact =>\n                contact.gender === \"female\"\n            ));\n            arrayAllGenders = arrayChoose.flat(Infinity);\n        }\n\n        if (this.state.checkMale) {\n            arrayChoose.push(this.state.contacts.filter(contact =>\n                contact.gender === \"male\"\n            ));\n            arrayAllGenders = arrayChoose.flat(Infinity);\n        }\n\n        if (this.state.checkOther) {\n            arrayChoose.push(this.state.contacts.filter(contact =>\n                contact.gender !== \"male\" && contact.gender !== \"female\"\n            ));\n            arrayAllGenders = arrayChoose.flat(Infinity);\n        }\n        \n        contactsList.map(contact => {\n            arrayAllGenders.map(item => {\n                if (contact === item)  resultArray.push(contact);\n            })\n        })\n        this.setState({ contacts: resultArray });\n\n    }\n    filterGenders = (event) => {\n        this.setState({ contacts: contactsList });\n        this.setState({ [event.target.name]: event.target.checked }, this.findGender);\n    };\n\n    filterSearch(event) {\n        const enterValue = event.target.value.toLowerCase();\n        const newArray = [];\n        const neededKeys = [\"firstName\", \"lastName\", \"phone\"];\n        if (!enterValue) {\n            this.filterGenders(event);\n            this.setState({search: true})\n        } else {\n            this.state.contacts.forEach((el, index) => {\n                neededKeys.map(item => {\n                    if (this.state.contacts[index][item].toLowerCase().indexOf(enterValue) !== -1) {\n                        if (!newArray.includes(el)) {\n                            newArray.push(el);\n                        };\n                        this.setState({search: true});\n                    } \n                });\n            });\n            (!newArray.length) ? this.setState({search : false}) :       \n                                this.setState({ contacts: newArray });\n        };\n    };\n\n    createList() {\n        return (this.state.search) ? this.state.contacts.map(contact => <Contact {...contact} />)\n            :(<div className = \"no-contacts\">Контактів немає</div>)  \n    };\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"main\">\n                    <div className=\"head-page\">\n                        <p>ContactsBook</p>\n                    </div>\n                    <div className=\"active-action\">\n                        <ChooseGender funcG={this.filterGenders} checkMale={\n                            this.state.checkMale\n                        }\n                            checkFemale={this.state.checkFemale}\n                            checkOther={this.state.checkOther} />\n                        <div className=\"search-place\">\n                            <input placeholder=\"Пошук\" onChange={(event) => this.filterSearch(event)} />\n                        </div>\n                    </div>\n                    <div className=\"contacts-list\">\n                        {\n                        this.createList()}\n                    </div>\n                </div>\n                <div className=\"footer\" />\n            </div>\n        )\n    }\n}\n\nexport default CreatePostPage;","import './App.css';\nimport CreatePostPage from \"./components/CreateContactsList\";\n\nfunction App() {\n  return (\n      <CreatePostPage />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}